/**
 * @param {string} s
 * @return {boolean}
 */
 
 Time complexity: O(N)
 Space complexity: 0(N)
var isValid = function(s) {
    
    const parenthesis = {
        '(': ')',
        '{' : '}',
        '[' : ']'
    }
    
    const stack = [];
    
    for(let i =0; i<s.length; i++){
        
        if(Object.keys(parenthesis).includes(s[i])){
            stack.push(s[i])
        }
       else if(Object.values(parenthesis).includes(s[i])){
           if(s[i]=== parenthesis[stack[stack.length - 1]] && stack.length > 0){
               stack.pop()
           }else{
               return false
           }
       }
        
        
    }
    
    
    return stack.length === 0 // dont forget to check if the stack is empty
};
